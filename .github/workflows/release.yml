name: release

on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    tags:
    - "v*.*.*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-x86_64:
    strategy:
      matrix:
        platform:
        - host: ubuntu-20.04
          target: x86_64-unknown-linux-musl
          nix: x86_64-linux
    runs-on: ${{ matrix.platform.host }}
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
    - uses: cachix/cachix-action@v10
      with:
        name: enarx
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Pre-build setup
      run: ${{ matrix.platform.setup }}

    - run: nix build -L ${{ matrix.platform.buildArgs }} '.#packages.${{ matrix.platform.nix }}.enarx-static'
    - run: nix run --inputs-from . 'nixpkgs#coreutils' -- --coreutils-prog=ginstall -p ./result/bin/enarx "enarx-${{ matrix.platform.target }}"
    - uses: actions/upload-artifact@v3
      with:
        name: enarx-${{ matrix.platform.target }}
        path: enarx-${{ matrix.platform.target }}

  test-bin:
    needs: [ build-x86_64 ]
    strategy:
      matrix:
        platform:
        - host: ubuntu-20.04
          target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.platform.host }}
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: enarx-${{ matrix.platform.target }}
    - run: chmod +x ./enarx-${{ matrix.platform.target }}
    - run: ./enarx-${{ matrix.platform.target }} platform info

  release:
    if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'push'
    needs: [ build-x86_64, test-bin ]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: enarx-x86_64-unknown-linux-musl
    - uses: softprops/action-gh-release@v1
      with:
        draft: true
        prerelease: true
        files: |
          enarx-x86_64-unknown-linux-musl
